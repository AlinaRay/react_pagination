{"version":3,"sources":["components/Pagination.js","api.js","App.js","index.js"],"names":["Pagination","_ref","withInfo","currentPage","buttons","onPageChange","renderDotsButton","react_default","a","createElement","className","type","renderPrevOrNextButton","buttonName","buttonNum","toLowerCase","trim","includes","length","concat","id","name","onClick","renderSingleButton","key","aria-label","filter","buttonNumber","map","number","getCountries","Object","asyncToGenerator","regenerator_default","mark","_callee","countries","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","getPageNumbers","itemsPerPage","itemsNumber","pageNumbers","i","Math","ceil","push","App","state","countriesData","selectOptions","event","_event$target","target","_this$state","_this","countriesAmount","setState","prevState","onSelectChange","value","_this$state2","indexOfLastItem","indexOfFirstItem","currentItems","slice","htmlFor","onChange","item","shortid","generate","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8928c5ca.chunk.js","sourcesContent":["import React from 'react';\n\nconst Pagination = ({\n// eslint-disable-next-line react/prop-types\n  withInfo, currentPage, buttons, onPageChange,\n}) => {\n//   console.log(currentPage);\n  const renderDotsButton = () => (\n    <li className=\"page-item disabled\">\n      <button\n        className=\"page-link\"\n        type=\"button\"\n      >\n        ...\n      </button>\n    </li>\n  );\n  const renderPrevOrNextButton = (buttonName) => {\n    const buttonNum = buttonName.toLowerCase().trim().includes('prev')\n      ? buttons[0]\n      : buttons.length;\n\n    return (\n      <li\n        className={`page-item ${currentPage === buttonNum\n          ? 'disabled'\n          : ''\n        }`}\n      >\n        <button\n          className=\"page-link\"\n          type=\"button\"\n          id={buttonNum}\n          name={buttonName}\n          onClick={onPageChange}\n        >\n          {buttonName}\n        </button>\n      </li>\n    );\n  };\n\n  const renderSingleButton = (buttonNum, buttonName) => (\n    <li\n      key={buttonNum}\n      className={`page-item ${currentPage === buttonNum\n        ? 'active'\n        : ''\n      }`}\n    >\n      <button\n        className=\"page-link\"\n        type=\"button\"\n        id={buttonNum}\n        name={buttonName}\n        onClick={onPageChange}\n      >\n        {buttonNum}\n      </button>\n    </li>\n  );\n\n  return (\n    // eslint-disable-next-line max-len\n    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n      <div className=\"mb-2\">\n        <span>\n          {withInfo}\n        </span>\n      </div>\n      <nav aria-label=\"Page navigation\" className=\"\">\n        <ul className=\"pagination justify-content-center\">\n          { renderPrevOrNextButton('Previous') }\n          { renderSingleButton(buttons[0], 'numbers') }\n          { currentPage < 4 ? ('') : (renderDotsButton()) }\n          { buttons.filter(buttonNumber => (\n            buttonNumber !== 1\n          && buttonNumber !== buttons.length\n          && (buttonNumber === currentPage - 1\n          || buttonNumber === currentPage\n          || buttonNumber === currentPage + 1\n          )))\n            .map(number => (\n              renderSingleButton(number, 'numbers')\n            ))\n          }\n          { currentPage > buttons.length - 3 ? ('') : (renderDotsButton()) }\n          { renderSingleButton(buttons.length, 'numbers') }\n          { renderPrevOrNextButton('Next') }\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","const getCountries = async() => {\n  const url = 'https://restcountries.eu/rest/v2/all';\n  const countries = await fetch(url);\n\n  return countries.json();\n};\n\nexport default getCountries;\n","import React from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport Pagination from './components/Pagination';\nimport getCountries from './api';\n\nconst getPageNumbers = (itemsPerPage, itemsNumber) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(itemsNumber / itemsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return pageNumbers;\n};\n\nclass App extends React.Component {\n  state = {\n    countriesData: [],\n    currentPage: 1,\n    itemsPerPage: 5,\n    pageNumbers: [],\n    selectOptions: [3, 5, 10, 20],\n  };\n\n  async componentDidMount() {\n    const countries = await getCountries();\n\n    this.setState(prevState => ({\n      countriesData: countries,\n      countriesAmount: countries.length,\n      pageNumbers: getPageNumbers(prevState.itemsPerPage, countries.length),\n    }));\n  }\n\n  onPageChange = (event) => {\n    const { name, id } = event.target;\n    const {\n      currentPage, itemsPerPage, countriesAmount, pageNumbers,\n    } = this.state;\n\n    this.setState({\n      pageNumbers: getPageNumbers(itemsPerPage, countriesAmount),\n    });\n    if (name.toLowerCase().trim().includes('next')\n      && currentPage < pageNumbers.length) {\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage + 1,\n      }));\n    } else if (name.toLowerCase().trim().includes('prev') && currentPage > 1) {\n      this.setState(prevState => ({\n        currentPage: prevState.currentPage - 1,\n      }));\n    } else {\n      this.setState({ currentPage: +id });\n    }\n  };\n\n  onSelectChange = ({ target: { value } }) => {\n    this.setState({\n      itemsPerPage: +value,\n      currentPage: 1,\n    });\n    this.setState(prevState => ({\n      pageNumbers: getPageNumbers(prevState.itemsPerPage,\n        prevState.countriesAmount),\n    }));\n  };\n\n  render() {\n    const {\n      countriesData, currentPage, itemsPerPage, countriesAmount, pageNumbers,\n      selectOptions,\n    } = this.state;\n\n    let indexOfLastItem = currentPage * itemsPerPage;\n\n    indexOfLastItem = indexOfLastItem > countriesAmount\n      ? countriesAmount\n      : indexOfLastItem;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = countriesData.slice(indexOfFirstItem, indexOfLastItem);\n\n    return (\n      <div className=\"App\">\n        <div className=\"container pt-4 pb-4\">\n          <h1 className=\"text-center mb-4\">Countries</h1>\n          <form>\n            {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n            <label className=\"custom-form-control\" htmlFor=\"formControlSelect\">\n              Show\n              <select\n                onChange={this.onSelectChange}\n                id=\"formControlSelect\"\n                className=\"form-control mt-2 mb-2 mr-2 ml-2\"\n                value={itemsPerPage}\n              >\n                {selectOptions.map(item => (\n                  <option key={item} value={item}>{item}</option>\n                ))}\n              </select>\n              countries\n            </label>\n          </form>\n          <ul className=\"list-group mt-2 mb-4\">\n            {\n              currentItems.map(item => (\n                <li\n                  key={shortid.generate()}\n                  className=\"list-group-item\"\n                >\n                  {item.name}\n                </li>\n              ))\n            }\n          </ul>\n\n          <Pagination\n            buttons={pageNumbers}\n            currentPage={currentPage}\n            withInfo={`Showing ${indexOfFirstItem + 1} to ${indexOfLastItem}\n             of ${countriesAmount} countries`}\n            onPageChange={this.onPageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}